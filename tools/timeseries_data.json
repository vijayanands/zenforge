{
  "metadata": {
    "schema_version": "1.0",
    "organization": "example_org",
    "project": "example_project"
  },
  "__comment": "Store events with consistent base fields (timestamp, event_type, event_id)",
  "event_types": {
    "design": {
      "requirements": {
        "__comment": "stage value can be start, end, blocked, resume",
        "event_id": "title of project",
        "stage": "start",
        "timestamp": "2024-01-01T12:00:00Z",
        "project_summary": "project summary",
        "author": "developer@example.com",
        "jira": "a1b2c3d4"
      },
      "ux_design": {
        "__comment": "stage value can be start, end, blocked, resume",
        "event_id": "title of project",
        "stage": "start",
        "timestamp": "2024-01-01T12:00:00Z",
        "project_summary": "project summary",
        "author": "developer@example.com",
        "jira": "a1b2c3d4"
      }
    },
    "sprint_planning": {
      "__comment": "stage value can be start, end, blocked, resume",
      "event_id": "title of project",
      "stage": "start",
      "timestamp": "2024-01-01T12:00:00Z",
      "project_summary": "project summary",
      "author": "developer@example.com"
    },
    "implementation":[
      {
        "__comment": "event in this case is a jira, the states associated with the jira will be one of the jira lifecycle states",
        "event_id": "PRJ-1298",
        "timestamp": "2024-01-01T12:00:00Z",
        "state": "fixed"
      },
      {
        "__comment": "the states associated with the jira will be one of the jira lifecycle states",
        "event_id": "PRJ-1298",
        "timestamp": "2024-01-01T12:00:00Z",
        "state": "closed"
      }
    ],
    "code_commit": {
      "timestamp": "2024-01-01T12:00:00Z",
      "event_id": "commit_123",
      "repository": "main-repo",
      "branch": "feature/new-api",
      "author": "developer@example.com",
      "commit_hash": "a1b2c3d4",
      "files_changed": 5,
      "lines_added": 150,
      "lines_removed": 30,
      "metrics": {
        "code_coverage": 85.5,
        "lint_score": 95
      }
    },
    "pull_request": {
      "_comment": "PR state can be opened, approved, merged",
      "timestamp": "2024-01-01T12:00:00Z",
      "event_id": "pr_123",
      "repository": "main-repo",
      "author": "developer@example.com",
      "commit_hash": ["a1b2c3d4", "e5f6g7h8"],
      "state": "opened"
    },
    "ci-cd" : [
      {
        "environment": "staging",
        "build": {
          "timestamp": "2024-01-01T12:05:00Z",
          "event_id": "build_456",
          "trigger_type": "commit",
          "trigger_id": "commit_123",
          "duration_seconds": 180,
          "status": "success",
          "artifacts": [
            "app-1.0.0.jar"
          ],
          "metrics": {
            "test_coverage": 87.2,
            "failed_tests": 0,
            "warnings": 2
          }
        },
        "deployment": {
          "timestamp": "2024-01-01T12:15:00Z",
          "event_id": "deploy_789",
          "build_id": "build_456",
          "status": "success",
          "duration_seconds": 300,
          "metrics": {
            "startup_time": 12.5,
            "health_check_status": "passed",
            "resource_usage": {
              "cpu": 65.5,
              "memory": 1024
            }
          }
        },
        "rollback": {
          "timestamp": "2024-01-01T12:15:00Z",
          "event_id": "deploy_789",
          "build_id": "build_456",
          "Reason": "jira id for rollback"
        },
        "p0_bugs": {
          "__comment": "event in this case is a jira, the states associated with the jira will be one of the jira lifecycle states",
          "event_id": "PRJ-1298",
          "timestamp": "2024-01-01T12:00:00Z",
          "state": "fixed"
        }
      }
    ]
  }
}